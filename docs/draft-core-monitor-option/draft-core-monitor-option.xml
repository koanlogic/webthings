<?xml version="1.0" encoding="US-ASCII"?>
<!-- vim: set ts=2 expandtab: -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY RFC2119 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC2629 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2629.xml">
<!ENTITY RFC3552 SYSTEM "http://xml.resource.org/public/rfc/bibxml/reference.RFC.3552.xml">
<!ENTITY I-D.narten-iana-considerations-rfc2434bis SYSTEM "http://xml.resource.org/public/rfc/bibxml3/reference.I-D.narten-iana-considerations-rfc2434bis.xml">
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<?rfc strict="yes" ?>
<?rfc toc="yes"?>
<?rfc tocdepth="4"?>
<?rfc symrefs="yes"?>
<?rfc sortrefs="yes" ?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<rfc category="info" docName="draft-core-monitor-option-00" ipr="trust200902">
  <front>
    <title>
      Monitor Option for CoAP
    </title>
    <author
      fullname="Thomas Fossati"
      initials="T.F."
      surname="Fossati"
    >
      <organization>KoanLogic Srl</organization>
        <address>
          <postal>
            <street>Via di Sabbiuno, 11/5</street>
            <city>Bologna</city>
            <code>40100</code>
            <country>Italy</country>
        </postal>
        <email>tho@koanlogic.com</email>
      </address>
    </author>

    <author
      fullname="Pierpaolo Giacomin"
      initials="P.G."
      surname="Giacomin"
    >
      <organization>Hitachi Europe</organization>
      <address>
        <email>yrz@anche.no</email>
      </address>
    </author>

    <date month="December" year="2011" />

    <area>General</area>
    <workgroup>Internet Engineering Task Force</workgroup>

    <keyword>CoAP, Monitor option, Update option, sleepy sensor</keyword>

    <abstract>
      <t>Monitor and Gratuitous Update Options for CoAP.</t>
    </abstract>
  </front>

  <middle>
    <section title="Introduction">

      <t>The proposal described in this memo covers the following use case: a node N, which is sleeping most of the time, depends one or more resources hosted at another sleepy node M. In cases as such, the probability of an empty intersection between their respective wake periods is very high, making it hard for the two to synchronize.</t>

      <t>In this scenario, using the basic proxy functionality is not enough. In fact, if a cached resource at M becomes stale while M is sleeping, request from N could result in a 5.04 (Gateway Timeout) response code. Further, the basic observe pattern could lead to lost state updates in case N is offline while M pushes its notifications.</t>

      <t>This memo introduces two extensions to the Proxy caching functionality that give the Proxy the ability to keep the freshest copy of a resource while its origin and clients may be offline. Conversely, clients and origins are provided the ability to both read and write the resource copy while the other party may be offline.</t>

      <section title="Requirements Language">
        <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in <xref target="RFC2119">RFC 2119</xref>.</t>
      </section>
    </section>

    <section title="Monitor Option">
      <t>The Monitor option is used to ask a Proxy to keep a given resource fresh by continuously observing (polling, at worst) it, while the requesting node is sleeping. Thus the sleepy sensor can get the latest representation published by the monitored resource when it wakes up, even if the origin is sleeping.</t>

      <t>The Monitor option is critical. If the Proxy does not recognize it, a 4.02 (Bad Option) MUST be returned to the client.</t>
      
      <section title="Monitor Registration">
        <figure align="center" anchor="monitor_registration">
          <artwork align="left"><![CDATA[
P        C
|   PUT  | Proxy-URI: coap://S/r
|<-------+   Monitor: <empty>
|        |   Max-Age: 86400
|        |    Accept: ...
|  2.01  |
+------->| Location-Path: coap://S/r
|        |
          ]]></artwork>
        </figure>
        <t>The client PUT's the resource to be monitored, identified by the Proxy-URI. The request message contains a Monitor option, and possibly specifies a TTL (i.e. an implicit de-registration indication) for the monitor through Max-Age. One or more content types for the acceptable representations of the resource are optionally specified via the Accept option.</t>

        <t>The operation creates a monitor resource at the Proxy, that is a carbon copy of one or more representations of the monitored resource.</t>

        <t>There may be multiple clients requesting a monitor on a same resource. Multiple identical monitor resources MUST be absorbed into one only refcounted monitor at the Proxy.</t>
      </section>

      <section title="Monitor De-registration">
        <t>The monitor MUST be actually deleted at the Proxy when its associated refcounter reaches 0.</t>

        <t>In order to save storage, a Proxy MAY decide to delete a monitor resource in case it has not been requested for a sufficiently long time.</t>

        <section title="Explicit De-registration">
          <figure align="center" anchor="explicit_monitor_deregistration">
            <artwork align="left"><![CDATA[
P        C
| DELETE | Proxy-URI: coap://S/r
|<-------+   Monitor: <empty>
|        |
|  2.02  |
+------->|
|        |
            ]]></artwork>
          </figure>
        </section>

        <section title="Implicit De-registration">
         <t>Implicit de-registration occurs when the monitoring period specified by the client via Max-Age expires. If no Max-Age was supplied on registration, the client instance of the monitor MUST be de-registered explicitly.</t>
        </section>

      </section>

      <section title="Resource Refresh">
        <t>In order to minimize the number of messages used by the monitoring process, the Proxy SHOULD try to install an observation on the requested resource first. In case this attempt fails, the Proxy will fall back to repeated poll possibly driven by the Max-Age value indicated by the origin server. Usual cache validation MUST be applied to the cached copy of the monitored resource (CHECK THIS).</t>
      </section>
    </section>

    <section title="Gratuitous Update Option">
      <t>A new gratuitous response message to a Proxy is introduced to allow a sleepy sensor to use the Proxy as the rendez-vous point for sleepy node to sleepy node signalling.</t>

      <figure align="center" anchor="gratuitous_update_option">
        <artwork align="left"><![CDATA[
P        S
|   PUT  |    Proxy-URI: coap://S/r
|<-------+       Update: 123456789
|    r   | Content-Type: ...
|        |
|  2.01  | (or 2.04)
+------->| 
|        |
        ]]></artwork>
      </figure>
      <t>The Origin Server publish one of its hosted resources, specified by the enclosed Proxy-URI, by PUT'ing it to the proxy. The Update option value is a monotonically increasing counter which hints the Proxy about the more recent version of the resource.</t>

      <t>[TODO PUT and ETags]</t>
    </section>

    <!-- This PI places the pagebreak correctly (before the section title) in the text output. -->
    <?rfc needLines="8" ?>

    <section anchor="Acknowledgements" title="Acknowledgements">
      <t>.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>The following entries are added to the CoAP Option Numbers registry:</t>
      <figure align="center">
        <artwork align="left"><![CDATA[
.------------------------------.
| Number | Name    | Reference |
:--------:---------:-----------:
|  2n+1  | Update  | RFC XXXX  |
+--------+---------+-----------+
|  2m+1  | Monitor | RFC XXXX  |
`------------------------------'
        ]]></artwork>
      </figure>
    </section>

    <section anchor="Security" title="Security Considerations">

    <t>THREAT#1: Cache poisoning (authenticate sender.)</t>
    <t>THREAT#2: Unauthorized de-registration (authenticate requester.)</t>
    <t>THREAT#3: Proxy resources' exhaustion (authenticate requester + quota limit.)</t>
    <t>THREAT#4: Global state loss (cache redundancy.)</t>
    <t>THREAT#5: DoS on remote constrained resource via unneeded monitoring (...)</t>


    <t></t>

    </section>
  </middle>

  <back>
    <references title="Normative References">
      &RFC2119;
    </references>
  </back>
</rfc>

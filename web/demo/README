**********
* WTDEMO *
**********

Demos Webthings functionality via a webapp.

Prerequisites
=============
- MaKL must be installed. Download the latest release or clone the repo:
  $ git clone git@github.com:koanlogic/makl.git
  See INSTALL for instructions.
- client browser must be webgl-enabled. Try it out:
  [http://www.khronos.org/webgl/wiki/Demo_Repository]
- client browser must be CORS enabled (most modern browsers support it by
  default: Firefox 3.5+, Safari 4+, IE 8+);
- HTTP/CoAP proxy must be CORS enabled [http://www.w3.org/wiki/CORS_Enabled]
  (KINK is).

((full mote demo only))
- setup the mote environment (border router + CoAP server)
  and connect to the border router via tunslip [webthings/wsn/README.Contiki].
- compile and install the bridge sotfware [webthings/bridge/sw/INSTALL];

Running the Demo
================

* Configure and make the webapp:

$ cd webthings/web/demo
$ maklconf [ --enable_debug] [ --enable_warns]
$ makl

* Change the following values paremeters in kloned/webapp/www/index.html
accordingly:

- var ACCEL_RESOURCE = "http://wtdemo:8080/acc.kl1";
  Indicates the URI of the ajax request. By default points to acc.kl1, a
  placeholder accelerometer "emulator" that simply returns random values.
  For real motes, it should point to the KINK proxy "http://wtdemo:5683/acc".

- var INTERVAL = 500;
  Indicates the amount of time in milliseconds between every ajax call.

* Rebuild changes into the embedded filesystem and run klone in foreground.

$ makl
$ ./kloned/kloned -F

((full mote demo only))
- run the HTTP/CoAP proxy:
  $ ${IDIR}/bin/kink

Open the browser at location http://wtdemo:8080.

TODO
====
- replace the figure with a textured mesh;
- handle "preflighted" CORS requests for methods other than GET and POST or
  special Content-Types.

FUTURE
======
- a curl-based reverse proxy could provide a fallback to firewalling
  enforcements and NAT problems introduced by CORS usage.
